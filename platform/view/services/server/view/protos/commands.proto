/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

option go_package = "./protos";
option cc_generic_services = true;

package protos;

import "google/protobuf/timestamp.proto";

// InitiateView is used to initiate a view
message InitiateView {
    string fid = 1;

    bytes input = 2;
}

message InitiateViewResponse {
    string cid = 1;
}

// InitiateView is used to initiate a view
message CallView {
    string fid = 1;

    bytes input = 2;
}

message CallViewResponse {
    bytes result = 1;
}

// Header is a generic replay prevention and identity message to include in a signed command
message Header {
    // Timestamp is the local time when the message was created
    // by the sender
    google.protobuf.Timestamp timestamp = 1;

    // Nonce is a sufficiently long random value
    // used to ensure the request has enough entropy.
    bytes nonce = 3;

    // Creator of the message.
    bytes creator = 4;

    // TlsCertHash represents the hash of the client's TLS certificate
    // when mutual TLS is enabled
    bytes tls_cert_hash = 5;
}

// Command describes the type of operation that a client is requesting.
message Command {
    // Header is the header of this command
    Header header = 1;

    // Payload is the payload of this command. It can assume one of the following value
    oneof payload {
        InitiateView initiateView = 2;
        CallView callView = 3;
    }
}

// SignedCommand is a command that carries the signature of the command's creator.
message SignedCommand {
    // Command is the serialised version of a Command message
    bytes command = 1;

    // Signature is the signature over command
    bytes signature = 2;
}

message CommandResponseHeader {
    // Timestamp is the time that the message
    // was created as  defined by the sender
    google.protobuf.Timestamp timestamp = 1;

    // CommandHash is the hash computed on the concatenation of the SignedCommand's command and signature fields.
    // If not specified differently, SHA256 is used
    // The hash is used to link a response with its request, both for bookeeping purposes on an
    // asynchronous system and for security reasons (accountability, non-repudiation)
    bytes command_hash = 2;

    // Creator is the identity of the party creating this message
    bytes creator = 3;
}

// Error reports an application error
message Error {
    // Message associated with this response.
    string message = 1;

    // Payload that can be used to include metadata with this response.
    bytes payload = 2;
}

// A CommnandResponse is returned from a server to the command submitter.
message CommandResponse {
    // Header of the response.
    CommandResponseHeader header = 1;

    // Payload of the response.
    oneof payload {
        Error err = 2;
        InitiateViewResponse initiateViewResponse = 3;
        CallViewResponse callViewResponse = 4;
    }
}

// SignedCommandResponse is a signed command response
message SignedCommandResponse {
    // Response is the serialised version of a CommandResponse message
    bytes response = 1;

    // Signature is the signature over command
    bytes signature = 2;
}