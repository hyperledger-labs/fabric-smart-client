/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

package main

import (
	fscnode "github.com/hyperledger-labs/fabric-smart-client/node"

	viewregistry "github.com/hyperledger-labs/fabric-smart-client/platform/view"
	fsc "github.com/hyperledger-labs/fabric-smart-client/integration/nwo/fsc"
	initiator1 "github.com/hyperledger-labs/fabric-smart-client/integration/nwo/fsc/testdata/foo/initiator"
	initiator "github.com/hyperledger-labs/fabric-smart-client/integration/nwo/fsc/testdata/initiator"
	responder "github.com/hyperledger-labs/fabric-smart-client/integration/nwo/fsc/testdata/responder"
)

func main() {
	n := fscnode.New()
	n.InstallSDK(fsc.NewDummySDK(n))
	
	n.Execute(func() error {
		registry := viewregistry.GetRegistry(n)
		if err := registry.RegisterFactory("initiator", &initiator.Factory{}); err != nil {
			return err
		}
		if err := registry.RegisterFactory("initiator", &initiator1.Factory{}); err != nil {
			return err
		}
		if err := registry.RegisterFactory("responder", &responder.Factory{}); err != nil {
			return err
		}
		if err := registry.RegisterFactory("initiator2", &initiator.Factory{}); err != nil {
			return err
		}
		registry.RegisterResponder(&responder.Responder{}, &initiator.Initiator{})
		
		return nil
	})
}
